package com.mycompany.pdv.view;

import com.mycompany.pdv.modelos.Produto;
import com.mycompany.pdv.services.ProdutoService;
import java.awt.Color;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

public class CadastroProdutoPanel extends javax.swing.JPanel {
    private List<Produto> produtos;
    Produto produtoSelecionado = new Produto();
    ProdutoService service;
    String filtroSelecionado;
    
    
    public CadastroProdutoPanel(ProdutoService service) throws IOException {
        initComponents();
        this.service = service;
        preparaTabela();
        preencherTabela(null);
        prepareCampoTexto();
        preparaLabel();
        jSalvarButton.setText("Salvar");
        jRemoverButton.setEnabled(false);
        jSalvarButton.setEnabled(false);
        jLimparButton.setEnabled(false);
        filtroSelecionado = "Título";
    }
    
    /* Inicializa labels dinâmicos */
    private void preparaLabel(){
        tituloLabel.setText("Descrição");
        tituloLabel.setForeground(Color.BLACK);
        
        autorLabel.setText("Categoria");
        autorLabel.setForeground(Color.BLACK);
        quantidadeLabel.setText("Valor");
        quantidadeLabel.setForeground(Color.BLACK);
    }
    
    private void preparaTabela() {
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        /*Não permitir edição direta na tabela */
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null}
                },
                new String[]{
                    "ID", "Desecrição", "Categoria", "Valor"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
    }
    
    private void preencherTabela(List<Produto> produtos) throws IOException {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpa a tabela
        if (produtos == null) produtos = service.listarProduto();
        for (Produto produto : produtos) {
            model.addRow(new Object[]{
                produto.getId().toString(),
                produto.getDescricao(),
                produto.getCategoria(),
                produto.getValor().toString(),
            });
        }
    }

    /*Pegar id a partir da celula da tabela e chamar serviço para obter cliente especifico */
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            // Obtém os valores das células da linha selecionada com verificação de null
            String id = getCellValueAsString(jTable1, selectedRow, 0);
            selecionarLivro(id);
        }
    }

     private String getCellValueAsString(JTable table, int row, int column) {
        Object value = table.getValueAt(row, column);
        return value != null ? value.toString() : "";
    }
     
    private void selecionarLivro(String id){
        if (id !=null){
            try {
                produtoSelecionado = service.obterProdutoPorId(Long.valueOf(id));
                if (produtoSelecionado !=null){
                    jtituloField.setText(produtoSelecionado.getDescricao());
                    jautorField.setText(produtoSelecionado.getCategoria());
                    jquantidadeField.setText(produtoSelecionado.getValor().toString());
                    jSalvarButton.setText("Atualizar");
                    jRemoverButton.setEnabled(true);
                }
            } catch (IOException e) {
                 JOptionPane.showMessageDialog(this, "Erro ao selecionar produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        autorLabel = new javax.swing.JLabel();
        jautorField = new javax.swing.JTextField();
        quantidadeLabel = new javax.swing.JLabel();
        jquantidadeField = new javax.swing.JTextField();
        jtituloField = new javax.swing.JTextField();
        tituloLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPesquisarField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBoxFiltroLivro = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSalvarButton = new javax.swing.JButton();
        jRemoverButton = new javax.swing.JButton();
        jLimparButton = new javax.swing.JButton();

        jPanel1.setPreferredSize(new java.awt.Dimension(338, 401));

        autorLabel.setText("Categoria");

        jautorField.setPreferredSize(new java.awt.Dimension(82, 31));

        quantidadeLabel.setText("Valor");

        jquantidadeField.setPreferredSize(new java.awt.Dimension(82, 31));

        jtituloField.setPreferredSize(new java.awt.Dimension(82, 31));

        tituloLabel.setText("Descrição");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtituloField, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .addComponent(jautorField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jquantidadeField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantidadeLabel)
                            .addComponent(tituloLabel)
                            .addComponent(autorLabel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtituloField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jautorField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quantidadeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jquantidadeField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );

        jPesquisarField.setPreferredSize(new java.awt.Dimension(82, 31));
        jPesquisarField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPesquisarFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar");

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jComboBoxFiltroLivro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Categoria", "Descrição" }));
        jComboBoxFiltroLivro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mudarItemComboBoxHandler(evt);
            }
        });

        jLabel7.setText("Filtrar por");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPesquisarField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxFiltroLivro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPesquisarField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxFiltroLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setPreferredSize(new java.awt.Dimension(354, 69));

        jSalvarButton.setText("Salvar");
        jSalvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalvarButtonActionPerformed(evt);
            }
        });

        jRemoverButton.setText("Remover");
        jRemoverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoverButtonActionPerformed(evt);
            }
        });

        jLimparButton.setText("Limpar");
        jLimparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLimparButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jSalvarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRemoverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLimparButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSalvarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRemoverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLimparButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 837, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPesquisarFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPesquisarFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPesquisarFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if ("Categoria".equals(filtroSelecionado))  produtos = service.obterProdutoPorCategoria(jPesquisarField.getText());
            if ("Descrição".equals(filtroSelecionado)) produtos = service.obterProdutoPorDescricao(jPesquisarField.getText());
            preencherTabela(produtos);
        } catch (IOException ex) {
             JOptionPane.showMessageDialog(this, "Erro ao obter lista de produtos: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLimparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLimparButtonActionPerformed
        limparFormulario();
        produtoSelecionado = new Produto();
        jSalvarButton.setText("Salvar");
        jRemoverButton.setEnabled(false);
        try {
            preencherTabela(null);
        } catch (IOException ex) {
             JOptionPane.showMessageDialog(this, "Erro ao obter lista de produtos: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jLimparButtonActionPerformed

    private void jSalvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalvarButtonActionPerformed
        try{
            preparaLabel();
            if (validarCampos() == true){
            if (produtoSelecionado.getId()!= null){
                produtoSelecionado.setDescricao(jtituloField.getText());
                produtoSelecionado.setCategoria(jautorField.getText());
               
               Long l = Long.valueOf(jquantidadeField.getText().trim());
                produtoSelecionado.setValor(BigDecimal.valueOf(l));
                service.atualizar(produtoSelecionado);
                preencherTabela(null);
                
            }else {
                produtoSelecionado = new Produto();
                produtoSelecionado.setDescricao(jtituloField.getText());
                produtoSelecionado.setCategoria(jautorField.getText());
                
                Long l = Long.valueOf(jquantidadeField.getText().trim());
                produtoSelecionado.setValor(BigDecimal.valueOf(l));
                service.salvar(produtoSelecionado);
                preencherTabela(null);
            }
        }
        } catch (IOException ex) {
             JOptionPane.showMessageDialog(this, "Erro ao obter lista de produtos: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jSalvarButtonActionPerformed
    private void jRemoverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoverButtonActionPerformed
        
        try{
            if (produtoSelecionado.getId()!= null){
                service.removerProduto(produtoSelecionado.getId());
                limparFormulario();
                produtoSelecionado = new Produto();
                jSalvarButton.setText("Salvar");
                jRemoverButton.setEnabled(false);
                preencherTabela(null);
            }
        } catch (IOException ex) {
             JOptionPane.showMessageDialog(this, "Erro ao remover produto: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jRemoverButtonActionPerformed

    private void mudarItemComboBoxHandler(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mudarItemComboBoxHandler
        filtroSelecionado = evt.getItem().toString();
    }//GEN-LAST:event_mudarItemComboBoxHandler

    private boolean validarCampos(){
        boolean estado = true;
        if(!Pattern.matches("^\\d{1,}", jquantidadeField.getText())){
            quantidadeLabel.setText("Quantidade: "+"Formato inválido");
            quantidadeLabel.setForeground(Color.red);
            estado = false;
        }
        return estado;
    }
    
    private void limparFormulario(){
        jtituloField.setText("");
        jautorField.setText("");
        jquantidadeField.setText("");
        preparaLabel();
    }
    
     private void prepareCampoTexto() {
        DocumentListener listener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkFields();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkFields();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkFields();
            }
        };

        jtituloField.getDocument().addDocumentListener(listener);
        jautorField.getDocument().addDocumentListener(listener);
        jquantidadeField.getDocument().addDocumentListener(listener);
    }

    /*Quando o listener associado ao field é acionado esse metodo habilita ou nao os botoes de controle*/ 
    private void checkFields() {
        String titulo = jtituloField.getText();
        String autor = jautorField.getText();
        String quantidade = jquantidadeField.getText();
        
        boolean allFieldsFilled = (titulo != null && !titulo.trim().isEmpty())
                && (autor != null && !autor.trim().isEmpty())
                && (quantidade != null && !quantidade.trim().isEmpty()
                );

        boolean onFieldsFilled = (titulo != null && !titulo.trim().isEmpty())
                || (autor != null && !autor.trim().isEmpty())
                || (quantidade != null && !quantidade.trim().isEmpty());
                
        
        jSalvarButton.setEnabled(allFieldsFilled);
        jLimparButton.setEnabled(onFieldsFilled);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel autorLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBoxFiltroLivro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jLimparButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jPesquisarField;
    private javax.swing.JButton jRemoverButton;
    private javax.swing.JButton jSalvarButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jautorField;
    private javax.swing.JTextField jquantidadeField;
    private javax.swing.JTextField jtituloField;
    private javax.swing.JLabel quantidadeLabel;
    private javax.swing.JLabel tituloLabel;
    // End of variables declaration//GEN-END:variables
}
